//@version=5
strategy(title='ONLY-LONG [Options]', overlay=true, initial_capital=1000, pyramiding=2, calc_on_order_fills=false, calc_on_every_tick=false, default_qty_type=strategy.fixed, default_qty_value=50, commission_value=0.0012, commission_type=strategy.commission.cash_per_contract)

//---------------------------------------------
// STRATEGY OVERVIEW
//---------------------------------------------
// This script is designed for trading call options, focusing solely on long positions.
// It uses a combination of RMI, ADX, RSI, Ichimoku, and EMA indicators for entry signals.
// The strategy is optimized for short time frames, capturing quick bullish movements.
// It enters long positions during favorable conditions and exits based on a time-adjusted take-profit target.

//---------------------------------------------
// VARIABLES & INITIALIZATION
//---------------------------------------------
tp = input.float(1.0, 'TAKE PROFIT (%)', minval=0, step=0.025)
    // nvda = 0.725
    // spy = 0.425
    // tsla = 0.25
    // meta = 0.175

RMI_len = input.int(24, title='RMI LENGTH', minval=1)
mom = input.int(5, title='RMI MOMENTUM', minval=1)
RMI_ob = input.int(70, title='RMI OVERBOUGHT', minval=0)
RMI_os = input.int(30, title='RMI OVERSOLD', minval=0)

ADX_len = input.int(88, title='ADX LENGTH', minval=1)
th = input.int(3, title='ADX THRESHOLD', minval=0)

RSI_len = input.int(55, 'RSI LENGTH', minval=1)
RSI_obos = input.int(52, title='RSI BULLISH/BEARISH', minval=1)

conversionPeriods = input.int(21, minval=1, title='ICHIMOKU CONVERSION LINE')
basePeriods = input.int(55, minval=1, title='ICHIMOKU BASE LINE')
laggingSpan2Periods = input.int(96, minval=1, title='ICHIMOKU LAGGING SPAN 2')

float step = input.float(0.15, "Radius Step", step = 0.001)
float multi = input.float(2, "Start Points Distance", step = 0.1)

bool trend = na
var float multi1 = 0.
var float multi2 = 0.
int n = 3
var float band = 0.

//---------------------------------------------
// CALCULATE RMI, ADX, RSI, AND ICHIMOKU
//---------------------------------------------
RMI(len, m) =>
    up = ta.ema(math.max(close - close[m], 0), len)
    dn = ta.ema(math.max(close[m] - close, 0), len)
    RMI = dn == 0 ? 0 : 100 - 100 / (1 + up / dn)
    RMI

calcADX(len) =>
    var float SmoothedTrueRange = 0.0
    var float SmoothedDirectionalMovementPlus = 0.0
    var float SmoothedDirectionalMovementMinus = 0.0
    TrueRange = math.max(math.max(high - low, math.abs(high - nz(close[1]))), math.abs(low - nz(close[1])))
    DirectionalMovementPlus = high - nz(high[1]) > nz(low[1]) - low ? math.max(high - nz(high[1]), 0) : 0
    DirectionalMovementMinus = nz(low[1]) - low > high - nz(high[1]) ? math.max(nz(low[1]) - low, 0) : 0
    SmoothedTrueRange := nz(SmoothedTrueRange[1]) - nz(SmoothedTrueRange[1]) / len + TrueRange
    SmoothedDirectionalMovementPlus := nz(SmoothedDirectionalMovementPlus[1]) - nz(SmoothedDirectionalMovementPlus[1]) / len + DirectionalMovementPlus
    SmoothedDirectionalMovementMinus := nz(SmoothedDirectionalMovementMinus[1]) - nz(SmoothedDirectionalMovementMinus[1]) / len + DirectionalMovementMinus
    DIP = SmoothedDirectionalMovementPlus / SmoothedTrueRange * 100
    DIM = SmoothedDirectionalMovementMinus / SmoothedTrueRange * 100
    DX = math.abs(DIP - DIM) / (DIP + DIM) * 100
    adx = ta.sma(DX, len)
    [DIP, DIM, adx]

[DIPlus, DIMinus, ADX] = calcADX(ADX_len)

macol = DIPlus > DIMinus and ADX > th ? color.lime : DIPlus < DIMinus and ADX > th ? color.red : color.orange

barcolor(color=macol, title='ADX')

RSI(len) =>
    up_rsi = ta.rma(math.max(ta.change(close), 0), len)
    down_rsi = ta.rma(-math.min(ta.change(close), 0), len)
    rsi = down_rsi == 0 ? 100 : up_rsi == 0 ? 0 : 100 - 100 / (1 + up_rsi / down_rsi)
    rsi

indexHighTF = barstate.isrealtime ? 1 : 0
indexCurrTF = barstate.isrealtime ? 0 : 1

ichimoku_close = request.security(syminfo.tickerid, 'D', close[indexHighTF], lookahead=barmerge.lookahead_off)
ichimoku_close_curr = ichimoku_close[indexCurrTF]

donchian(len) =>
    math.avg(ta.lowest(len), ta.highest(len))

conversionLine = donchian(conversionPeriods)
baseLine = donchian(basePeriods)

leadLine1 = math.avg(conversionLine, baseLine)
leadLine2 = donchian(laggingSpan2Periods)

p1 = plot(leadLine1, color=color.new(color.green, 0), title='Ichimoku Lead 1')
p2 = plot(leadLine2, color=color.new(color.red, 0), title='Ichimoku Lead 2')

fill(p1, p2, title='Ichimoku Background', color=leadLine1 > leadLine2 ? color.new(color.green, 90) : color.new(color.red, 90))

//---------------------------------------------
// EMA CONFIGURATION
//---------------------------------------------
EMA_Length = input(20, title='EMA Length')
EMA = ta.ema(close, EMA_Length)

longCondition_EMA = ta.crossover(close, EMA)

//---------------------------------------------
// COMBINED STRATEGY LOGIC
//---------------------------------------------
var bool longCondition = na
var bool shortCondition = na

longCondition := ta.crossover(RMI(RMI_len, mom), RMI_os) and DIPlus < DIMinus and ADX > th and RSI(RSI_len) < RSI_obos and leadLine1 >= leadLine2 and longCondition_EMA and hour < 15

//---------------------------------------------
// BAND & TREND CALCULATION
//---------------------------------------------
float distance  = ta.sma(math.abs(high-low), 100) * multi
float distance1 = ta.sma(math.abs(high-low), 100) * 0.2

if bar_index == 101
    trend := true
    band := low * 0.8

if close < band
    trend := false

if close > band
    trend := true

if trend[1] == false and ta.change(trend)
    band := low - distance

if trend[1] == true and ta.change(trend)
    band := high + distance

if bar_index % n == 0 and trend
    multi1 := 0
    multi2 += step    
    band += distance1 * multi2

if bar_index % n == 0 and not trend
    multi1 += step
    multi2 := 0   
    band -= distance1 * multi1

Sband = ta.sma(band, n)

color = trend ? #54b6d4 : #cf2b2b

band_upper = ta.sma(band + distance*0.5, n)
band_lower = ta.sma(band - distance*0.5, n)
band1 = trend ? band_upper : band_lower

plot(band1, color = bar_index % 2 == 0 ? color.new(chart.fg_color, 50) : na)

plot1 = plot(ta.change(trend) ? na : Sband, style = plot.style_linebr, color = color.gray)
plot2 = plot(ta.sma(hl2, 20), display = display.none)

fill(plot1, plot2, band, ta.sma(hl2, 20), color.new(color, 60), na)

//---------------------------------------------
// TRACKING LAST LONG ENTRY
//---------------------------------------------
var float last_open_longCondition = na
last_open_longCondition := longCondition ? close : nz(last_open_longCondition[1])

var int last_longCondition = 0
last_longCondition := longCondition ? time : nz(last_longCondition[1])

//---------------------------------------------
// STRATEGY EXECUTION
//---------------------------------------------
var int timing = 0
timing := dayofweek(time) - dayofweek(last_longCondition)
var int entry = 0

if dayofweek(last_longCondition) < 5
    if longCondition    
        strategy.entry('Buy 1 Call', strategy.long, qty=50)
    else if close >= last_open_longCondition * (1 + tp / 100) + timing * (1 + tp / 125) and (not trend or (hour == 15 and minute >= 45))
        strategy.close('Buy 1 Call')

else if dayofweek(last_longCondition) == 5
    if longCondition    
        strategy.entry('Buy 3 Calls', strategy.long, qty=50 * 3)
    else if close >= last_open_longCondition * (1 + tp / 125) + timing * (1 + tp / 100) and (not trend or (hour == 15 and minute >= 45))
        strategy.close('Buy 3 Calls')

else if dayofweek(last_longCondition) == 6
    if longCondition
        strategy.entry('Buy 6 Calls', strategy.long, qty=50 * 6)
        entry := 1
    else if close >= last_open_longCondition * (1 + tp / 150) and (not trend or (hour == 15 and minute >= 45))
        strategy.close('Buy 6 Calls')
        strategy.close('Buy Stop Loss Call')
        entry := 0
    else if close < last_open_longCondition * (1 - tp / 25) and entry == 1 and trend and hour < 15
        strategy.entry('Buy Stop Loss Call', strategy.long, qty=50)
