// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/

//@version=5
strategy(title='TREND-CATCHER [Options]', overlay=true, initial_capital=1000, pyramiding=1, calc_on_order_fills=false, calc_on_every_tick=false, default_qty_type=strategy.fixed, default_qty_value=28, commission_value=0.06, commission_type=strategy.commission.cash_per_order)

//---------------------------------------------
// STRATEGY OVERVIEW
//---------------------------------------------
// This script is designed for trading options, focusing solely on currnt trends.
// The strategy is optimized for short time frames, capturing quick movements.
// It enters positions during favorable conditions and exits based on a time-adjusted take-profit target.

//---------------------------------------------
// VARIABLES & INITIALIZATION
//---------------------------------------------
tp = input.float(1.0, 'TAKE PROFIT (%)', minval=0, step=0.025)
    // nvda = 0.85
    // tsla = 0.675
    // meta = 0.3

float step = input.float(0.15, "Radius Step", step = 0.001)
float multi = input.float(2, "Start Points Distance", step = 0.1)

bool trend = na
var float multi1 = 0.
var float multi2 = 0.
int n = 3
var float band = 0.

//---------------------------------------------
// BAND & TREND CALCULATION
//---------------------------------------------
float distance  = ta.sma(math.abs(high-low), 100) * multi
float distance1 = ta.sma(math.abs(high-low), 100) * 0.2

var int trendSwitch = 0
var float entryPrice = na

if bar_index == 101
    trend := true
    band := low * 0.8

if close < band
    trend := false

if close > band
    trend := true

if trend[1] == false and ta.change(trend)
    band := low - distance
    trendSwitch := trendSwitch+1

if trend[1] == true and ta.change(trend)
    band := high + distance
    trendSwitch := trendSwitch+1

if bar_index % n == 0 and trend
    multi1 := 0
    multi2 += step    
    band += distance1 * multi2

if bar_index % n == 0 and not trend
    multi1 += step
    multi2 := 0   
    band -= distance1 * multi1

Sband = ta.sma(band, n)

color = trend ? #54b6d4 : #cf2b2b

band_upper = ta.sma(band + distance*0.5, n)
band_lower = ta.sma(band - distance*0.5, n)
band1 = trend ? band_upper : band_lower

plot(band1, color = bar_index % 2 == 0 ? color.new(chart.fg_color, 50) : na)

plot1 = plot(ta.change(trend) ? na : Sband, style = plot.style_linebr, color = color.gray)
plot2 = plot(ta.sma(hl2, 20), display = display.none)

fill(plot1, plot2, band, ta.sma(hl2, 20), color.new(color, 60), na)

//---------------------------------------------
// STOCHS BY COWWATSON (ALTERED BY TP)
//---------------------------------------------
length = input.int(defval = 14, title = 'Length', group = "STOCHASTIC OSCILLATOR")
dLength = input.int(defval = 3, title = 'D Line Length', group = "STOCHASTIC OSCILLATOR")
upperTrigger = input.int(defval = 80, title = 'Upper Trigger Line', group = "STOCHASTIC OSCILLATOR")
lowerTrigger = input.int(defval = 20, title = 'Lower Trigger Line', group = "STOCHASTIC OSCILLATOR")
lowVal = ta.lowest(low, length)
highVal = ta.highest(high, length)
slowK = (close - lowVal) / (highVal - lowVal) * 100
fastD = ta.sma(slowK, dLength)

var float tp2 = ((tp - (upperTrigger+lowerTrigger)/200)/2)*100

entry_long_mkt_conditions = (
     slowK <= (upperTrigger+lowerTrigger)/2 + tp2
     and fastD <= (upperTrigger+lowerTrigger)/2 + tp2
     and (ta.crossunder(slowK, fastD) 
     or ta.crossover(slowK, fastD))
     ) and barstate.isconfirmed

entry_short_mkt_conditions = (
     slowK >= (upperTrigger+lowerTrigger)/2 - tp2
     and fastD >= (upperTrigger+lowerTrigger)/2 - tp2
     and (ta.crossunder(slowK, fastD) 
     or ta.crossover(slowK, fastD))
     ) and barstate.isconfirmed

exit_long_mkt_conditions = (
     slowK >= upperTrigger+tp2
     and fastD >= upperTrigger+tp2
     and (ta.crossunder(slowK, fastD) 
     or ta.crossover(slowK, fastD))
     ) and barstate.isconfirmed

exit_short_mkt_conditions = (
     slowK <= lowerTrigger+tp2/2
     and fastD <= lowerTrigger+tp2/2
     and (ta.crossunder(slowK, fastD) 
     or ta.crossover(slowK, fastD))
     ) and barstate.isconfirmed

//---------------------------------------------
// STRATEGY EXECUTION
//---------------------------------------------
var int entry = 0
var int exit = 0

if (hour == 9)
    trendSwitch := 0

if (trendSwitch == 1)
    if (trend)
        entry := 1
    else
        entry := 2

if (hour == 9 and minute == 40)
    if (entry == 1)
        entry := 3
    if (entry == 2)
        entry := 4

if (entry == 3 and entry_long_mkt_conditions and trend and low > Sband + 0.85)
    strategy.entry('Buy Call', strategy.long, 14 + (dayofweek(time) - 2) * 7)
    entryPrice := high
    entry := 0

if (entry == 4 and entry_short_mkt_conditions and not trend and high < Sband - 0.85)
    strategy.entry('Buy Put', strategy.short, 14 + (dayofweek(time) - 2) * 7)
    entryPrice := low
    entry := 0

if (not trend or exit_long_mkt_conditions)
    exit := 1

if exit == 1
    strategy.exit('Sell Call', 'Buy Call', limit=entryPrice * 1.0099)
    exit := 0

if (trend or exit_short_mkt_conditions)
    exit := 2

if exit == 2
    strategy.exit('Sell Put', 'Buy Put', limit=entryPrice * 0.9951)
    exit := 0
